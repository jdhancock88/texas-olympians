{"version":3,"sources":["+custom.js"],"names":["$","document","ready","setupData","athletes","sked","each","k","v","athlete","events","nextDate","this","nextdate","substring","dateParser","parse","dateFormat","dateTime","nexttime","jsDate","Date","name","event","jsdate","next_date","next_time","channel","roundresult","gold","silver","bronze","completed","push","sort","a","b","keyA","keyB","spliceSpot","i","length","currentDate","completedEvents","splice","concat","targetDate","toString","currentDateParser","todaysAths","buildTodaysAths","finished","buildOlympians","buildFilters","data","d3","select","selectAll","enter","append","attr","d","toLowerCase","replace","text","content","remove","click","target","checkExpansion","athDivs","sport","classed","athContent","athMedals","athName","country","nation","html","athBio","bioContent","age","hometown","bio","athTable","moreOverlay","undefined","link1text","link1url","link2text","link2url","link3text","link3url","closest","runIsotope","elem","hasClass","expand","$grid","isotope","movedAthlete","setTimeout","checkPosition","direction","removeClass","find","addClass","windowHeight","window","height","top","scrollTop","y","offset","animate","layoutMode","itemSelector","precentPosition","transitionDuration","filter","inArray","sports","option","filterAthletes","medal","filterString","year","getFullYear","dataCounter","time","format","getJSON","medalSelection","change","sportsSelection"],"mappings":"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","file":"scripts-bundle.js","sourcesContent":["$(document).ready(function() {\n\n\t//custom scripting goes here\n\n\t// injecting current year into footer\n\t// DO NOT DELETE\n\n\tvar currentDate = new Date();\n\tvar year = currentDate.getFullYear();\n\n\t$('.copyright').text(year);\n\n\t// data counter will keep track if all of our data is loaded before we build the page\n\tvar dataCounter = 0;\n\n\t// variables that will ultimately hold our data\n\tvar sked;\n\tvar athletes;\n\n\t// date parser to parse the string into a date object\n\tvar dateParser = d3.time.format(\"%Y-%m-%d\");\n\tvar currentDateParser = d3.time.format(\"%b %d %Y\");\n\n\t// date formater turns the date object into the correct Mon. Day, Year format\n\tvar dateFormat = d3.time.format(\"%b. %d, %Y\");\n\n\tvar todaysAths = [];\n\n\n\n\t/////////////////////////////////////////////\n\t///// GETTING THE DATA //////////////////////\n\t/////////////////////////////////////////////\n\n\t$.getJSON(\"http://interactives.dallasnews.com/data-store/2016/062016-texas-olympians-sked.json\", function(data) {\n\t\tsked = data;\n\t\tdataCounter++;\n\n\t\tif (dataCounter === 2) {\n\t\t\tsetupData(athletes, sked);\n\t\t}\n\t});\n\n\t$.getJSON(\"http://interactives.dallasnews.com/data-store/2016/062016-texas-olympians-athletes.json\", function(data) {\n\t\tathletes = data;\n\t\tdataCounter++;\n\n\t\tif (dataCounter === 2) {\n\t\t\tsetupData(athletes, sked);\n\t\t}\n\t});\n\n\n\n\n\t/////////////////////////////////////////////\n\t///// SETTING UP OUR DATA FOR ALL ATHLETES //\n\t/////////////////////////////////////////////\n\n\n\t// for each athlete, we'll cycle through our sked and add each event\n\t// to an events key on the athlete object\n\n\tfunction setupData(athletes, sked) {\n\n\t\t$.each(athletes, function(k,v) {\n\n\t\t\tvar athlete = v;\n\t\t\tathlete.events = [];\n\n\t\t\t$.each(sked, function() {\n\n\t\t\t\t// cut our date down to just YYYY-MM-DD\n\t\t\t\t// parse it into a date object\n\t\t\t\t// then format it into our MMM. DD, YYYY format\n\t\t\t\tvar nextDate = this.nextdate.substring(0,10);\n\t\t\t\tnextDate = dateParser.parse(nextDate);\n\t\t\t\tnextDate = dateFormat(nextDate);\n\n\t\t\t\t// create a string to get a valid date and time to be parsed into an accurate js date\n\t\t\t\tdateTime = nextDate + \", \" + this.nexttime;\n\t\t\t\tjsDate = Date.parse(dateTime);\n\n\t\t\t\t// add each event into our events key\n\t\t\t\tif (athlete.name === this.athlete) {\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\t\"jsdate\": jsDate,\n\t\t\t\t\t\t\"event\": this.event,\n\t\t\t\t\t\t\"next_date\": nextDate,\n\t\t\t\t\t\t\"next_time\": this.nexttime,\n\t\t\t\t\t\t\"channel\": this.channel,\n\t\t\t\t\t\t\"roundresult\": this.roundresult,\n\t\t\t\t\t\t\"gold\": this.gold,\n\t\t\t\t\t\t\"silver\": this.silver,\n\t\t\t\t\t\t\"bronze\": this.bronze,\n\t\t\t\t\t\t\"completed\": this.completed\n\t\t\t\t\t};\n\n\t\t\t\t\t// push each event to the events array on each athlete\n\t\t\t\t\tathlete.events.push(event);\n\n\t\t\t\t\t// sorts the individual events on each athlete by next event date and time\n\t\t\t\t\tathlete.events.sort(function(a, b) {\n\t\t\t\t\t\tvar keyA = new Date(a.jsdate),\n\t\t\t\t\t\t\tkeyB = new Date(b.jsdate);\n\n\t\t\t\t\t\tif (keyA < keyB) {return -1;}\n\t\t\t\t\t\tif (keyA > keyB) {return 1;}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t});\n\n\t\t\t\t\t// setting a variable that will be where we splice the events\n\t\t\t\t\t// array when we check to see if the events have finished\n\t\t\t\t\tvar spliceSpot;\n\n\t\t\t\t\t// iterate over each event, and find the last event to already\n\t\t\t\t\t// have occurred\n\t\t\t\t\tfor (i=0; i<athlete.events.length; i++) {\n\t\t\t\t\t\tif (athlete.events[i].jsdate < currentDate){\n\t\t\t\t\t\t\tspliceSpot = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// create an array of events that are finished and have no upcoming times\n\t\t\t\t\tvar completedEvents = athlete.events.splice(0, (spliceSpot + 1));\n\n\t\t\t\t\t// merge the events back together in one array\n\t\t\t\t\t// with the completed events at the end\n\t\t\t\t\tathlete.events = athlete.events.concat(completedEvents);\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\n\t\t// sorts the athletes by their next event date and time\n\t\tathletes.sort(function(a, b) {\n\t\t\tvar keyA = new Date(a.events[0].jsdate),\n\t\t\t\tkeyB = new Date(b.events[0].jsdate);\n\t\t\tif (keyA < keyB) {return -1;}\n\t\t\tif (keyA > keyB) {return 1;}\n\t\t\treturn 0;\n\t\t});\n\n\n\t\t// getting the current date in the the same format as the next_date value on\n\t\t// our athlete objects\n\t\tvar targetDate = currentDate.toString().substring(4, 15);\n\t\ttargetDate = currentDateParser.parse(targetDate);\n\t\ttargetDate = dateFormat(targetDate);\n\n\t\t// checking over each of our athletes and populating the todaysAths array\n\t\t// with each of the athletes that match the current date\n\t\tfor (i = 0; i < athletes.length; i++) {\n\t\t\tfor (k = 0; k < athletes[i].events.length; k++) {\n\t\t\t\tif (athletes[i].events[k].next_date === targetDate) {\n\t\t\t\t\ttodaysAths.push(athletes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// passing our todayAths and the targetDate off to the function\n\t\t// that builds out our divs of the athletes competing today\n\t\tbuildTodaysAths(todaysAths, targetDate);\n\n\n\t\t// same as above, we're going to run through all the athletes and\n\t\t// move the ones who are finished competiting to the end of the list\n\t\tvar spliceSpot;\n\n\t\t// find the last athlete to have already finished competiting\n\t\tfor (i=0; i<athletes.length; i++) {\n\t\t\tif (athletes[i].events[0].jsdate < currentDate){\n\t\t\t\tspliceSpot = i;\n\t\t\t}\n\t\t}\n\n\t\t// create an array of finished athletes, then add it back into the\n\t\t// master athletes array at the end\n\t\tvar finished = athletes.splice(0, (spliceSpot+1));\n\t\tathletes = athletes.concat(finished);\n\n\t\t// pass the data off to our olympian drawing function\n\t\tbuildOlympians(athletes);\n\n\t\t// build the dropdowns\n\t\tbuildFilters();\n\t}\n\n\t/////////////////////////////////////////////\n\t///// BUILDING OUT TODAY'S ATHLETES /////////\n\t/////////////////////////////////////////////\n\n\n\tfunction buildTodaysAths(data, targetDate) {\n\t\tif (data.length > 0) {\n\t\t\tvar todaysAths = d3.select(\"#todaysAths\").selectAll(\".upNext\")\n\t\t\t\t.data(data);\n\n\t\t\ttodaysAths.enter().append(\"div\")\n\t\t\t\t.attr(\"class\", \"upNext clearFix\")\n\t\t\t\t.append(\"img\")\n\t\t\t\t.attr(\"src\", function(d) {\n\t\t\t\t\tvar name = d.name.toLowerCase();\n\t\t\t\t\tname = name.replace(/ /g, \"\");\n\t\t\t\t\treturn \"images/_\" + name + \"Mug.jpg\";\n\t\t\t\t})\n\t\t\t\t.attr(\"alt\", function(d) {\n\t\t\t\t\treturn d.name;\n\t\t\t\t})\n\t\t\t\t.attr(\"class\", \"nextAthlete\");\n\n\t\t\ttodaysAths.append(\"h6\")\n\t\t\t\t.text(function(d) {\n\t\t\t\t\treturn d.name;\n\t\t\t\t});\n\n\t\t\ttodaysAths.append(\"p\")\n\t\t\t\t.text(function(d) {\n\t\t\t\t\tvar content;\n\t\t\t\t\tfor (i=0; i < d.events.length; i++) {\n\t\t\t\t\t\tif (d.events[i].next_date === targetDate) {\n\t\t\t\t\t\t\tcontent = d.events[i].event;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn content;\n\t\t\t\t});\n\n\t\t\ttodaysAths.append(\"p\")\n\t\t\t\t.text(function(d) {\n\t\t\t\t\tvar content;\n\t\t\t\t\tfor (i=0; i < d.events.length; i++) {\n\t\t\t\t\t\tif (d.events[i].next_date == targetDate) {\n\t\t\t\t\t\t\tcontent = d.events[i].next_time + \", \" + d.events[i].channel;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn content;\n\t\t\t\t});\n\t\t} else {\n\t\t\t$(\"#scheduleDisplay\").remove();\n\t\t}\n\n\t\t// ENDS D3 ATHLETE DIV SETUP AND BEGINS ASSIGNING FUNCTIONS\n\n\t\t// assigning click funtion that expands and displays an athlete when\n\t\t// their name is clicked on from the schedule of today's athletes\n\n\t\t$(\".upNext h6\").click(function() {\n\n\t\t\tvar athlete;\n\n\t\t\t//grabbing the name of the athlete\n\t\t\tvar target = $(this).text();\n\n\t\t\t// find the corresponding athlete div that matches the target name\n\t\t\t$.each($(\".athlete\"), function() {\n\t\t\t\tif ( $(this).attr(\"data-athlete\") === target) {\n\t\t\t\t\tathlete = $(this);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// pass that div off to the checkExpansion function, which will\n\t\t\t// check if it's expanded currently and show it, then reposition\n\t\t\t// the window to accomodate any movement\n\t\t\tcheckExpansion(athlete);\n\t\t});\n\n\n\t}\n\n\n\t/////////////////////////////////////////////\n\t///// BUILDING OUT THE ATHLETE BLOCKS ///////\n\t/////////////////////////////////////////////\n\n\t// below, we're using d3 to build out our divs for each athletes\n\t// as with most things in d3, it's magical. mostly just creating\n\t// html elements based off the data for each athlete\n\n\tfunction buildOlympians(athletes) {\n\n\t\tvar athDivs = d3.select(\"#olympians\").selectAll(\".athlete\")\n\t\t\t.data(athletes);\n\n\t\tathDivs.enter().append(\"div\")\n\t\t\t.attr(\"class\", function(d) {\n\t\t\t\tvar sport = d.sport.toLowerCase();\n\t\t\t\tif (d.bronze > 0 || d.silver > 0 || d.gold > 0) {\n\t\t\t\t\treturn \"athlete medalWinner \" + sport;\n\t\t\t\t} else {\n\t\t\t\t\treturn \"athlete \" + sport;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.classed(\"bronzeWinner\", function(d) {\n\t\t\t\tif (d.bronze > 0) {return true;}\n\t\t\t})\n\t\t\t.classed(\"silverWinner\", function(d) {\n\t\t\t\tif (d.silver > 0) {return true;}\n\t\t\t})\n\t\t\t.classed(\"goldWinner\", function(d) {\n\t\t\t\tif (d.gold > 0) {return true;}\n\t\t\t})\n\t\t\t.attr(\"data-athlete\", function(d) {\n\t\t\t\treturn d.name;\n\t\t\t});\n\n\t\tvar expander = athDivs.append(\"i\")\n\t\t\t.attr(\"class\", \"fa fa-plus-circle expander\");\n\n\t\tvar athImage = athDivs.append(\"img\")\n\t\t\t.attr(\"src\", function(d) {\n\t\t\t\tvar name = d.name.toLowerCase();\n\t\t\t\tname = name.replace(/ /g, \"\");\n\t\t\t\treturn \"/images/_\" + name +\".jpg\";\n\t\t\t})\n\t\t\t.attr(\"alt\", function(d) {return d.name;});\n\n\t\tvar athContent = athDivs.append(\"div\")\n\t\t\t.attr(\"class\", \"athContent\");\n\n\n\t\tvar athMedals = athContent.append(\"ul\")\n\t\t\t.attr(\"class\", \"medalGroup clearFix\");\n\n\t\t\tathMedals.append(\"li\")\n\t\t\t\t.attr(\"class\", \"gold\")\n\t\t\t\t.text(function(d) {return d.gold;});\n\n\t\t\tathMedals.append(\"li\")\n\t\t\t\t.attr(\"class\", \"silver\")\n\t\t\t\t.text(function(d) {return d.silver;});\n\n\t\t\tathMedals.append(\"li\")\n\t\t\t\t.attr(\"class\", \"bronze\")\n\t\t\t\t.text(function(d) {return d.bronze;});\n\n\n\t\tvar athName = athContent .append(\"div\")\n\t\t\t.attr(\"class\", \"nameBlock clearFix\");\n\n\t\tathName.append(\"img\")\n\t\t\t.attr(\"src\", function(d) {\n\t\t\t\tvar country = d.nation.toLowerCase();\n\t\t\t\tcountry = country.replace(/ /g, \"\");\n\t\t\t\treturn \"images/_\" + country + \"Flag.jpg\";\n\t\t\t})\n\t\t\t.attr(\"alt\", function(d) {\n\t\t\t\treturn d.nation;\n\t\t\t})\n\t\t\t.attr(\"class\", \"flag\");\n\n\t\tathName.append(\"h4\")\n\t\t\t.html(function(d){\n\t\t\t\treturn d.name;\n\t\t\t});\n\n\t\tathName.append(\"h5\")\n\t\t\t.attr(\"class\", \"country\")\n\t\t\t.text(function(d) {\n\t\t\t\treturn d.nation;\n\t\t\t});\n\n\t\tvar athBio = athContent.append(\"div\")\n\t\t\t.attr(\"class\", \"bio\");\n\n\t\t\tathBio.append(\"div\")\n\t\t\t\t.attr(\"class\", \"info\")\n\t\t\t\t.html(function(d) {\n\t\t\t\t\tvar bioContent = \"<p class='label'>Age</p>\";\n\t\t\t\t\tbioContent += \"<h6>\" + d.age + \"</h6>\";\n \t\t\t\t\treturn bioContent;\n\t\t\t\t});\n\n\t\t\tathBio.append(\"div\")\n\t\t\t\t.attr(\"class\", \"info\")\n\t\t\t\t.html(function(d) {\n\t\t\t\t\tvar bioContent = \"<p class='label'>Texas tie</p>\";\n\t\t\t\t\tbioContent += \"<h6>\" + d.hometown + \"</h6>\";\n \t\t\t\t\treturn bioContent;\n\t\t\t\t});\n\n\t\t\tathBio.append(\"div\")\n\t\t\t\t.attr(\"class\", \"info\")\n\t\t\t\t.html(function(d) {\n\t\t\t\t\tvar bioContent = \"<p class='label'>Sport</p>\";\n\t\t\t\t\tbioContent += \"<h6>\" + d.sport + \"</h6>\";\n \t\t\t\t\treturn bioContent;\n\t\t\t\t});\n\n\t\tathContent.append(\"p\")\n\t\t\t.attr(\"class\", \"blurb\")\n\t\t\t.html(function(d){return d.bio;});\n\n\t\tvar athTable = athContent.append(\"div\")\n\t\t\t.attr(\"class\", \"schedule\");\n\n\t\t\tathTable.append(\"p\")\n\t\t\t\t.attr(\"class\", \"label\")\n\t\t\t\t.text(\"Schedule and Results\");\n\n\t\t\tathTable.append(\"table\")\n\t\t\t.attr(\"class\", \"schedule\")\n\t\t\t.html(function(d) {\n\n\t\t\t\tvar content = \"\";\n\n\t\t\t\tfor (i= -1; i < d.events.length; i++) {\n\t\t\t\t\tvar gold = false,\n\t\t\t\t\t\tsilver = false;\n\t\t\t\t\t\tbronze = false;\n\n\t\t\t\t\tif (i >= 0) {\n\n\t\t\t\t\t\tif (d.events[i].gold === \"x\") {\n\t\t\t\t\t\t\tgold = true;\n\t\t\t\t\t\t} else if (d.events[i].silver === \"x\") {\n\t\t\t\t\t\t\tsilver = true;\n\t\t\t\t\t\t} else if (d.events[i].bronze === \"x\") {\n\t\t\t\t\t\t\tbronze = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\tcontent +=  \"<tr><th>Event</th><th>Time/Date</th><th>Ch.</th><th>Rd./Pl.</th></tr>\";\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif (d.events[i].completed !== \"yes\") {\n\t\t\t\t\t\t\tcontent += \"<tr><td>\" + d.events[i].event + \"</td><td>\" + d.events[i].next_time +\", \" + d.events[i].next_date + \"</td><td>\" + d.events[i].channel + \"</td>\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontent += \"<tr><td>\" + d.events[i].event + \"</td><td>Completed</td><td>\" + d.events[i].channel + \"</td>\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (gold === true) {\n\t\t\t\t\t\t\tcontent += \"<td><span class='medal goldMedal'></span>Gold</td></tr>\";\n\t\t\t\t\t\t} else if (silver === true) {\n\t\t\t\t\t\t\tcontent += \"<td><span class='medal silverMedal'></span>Silver</td></tr>\";\n\t\t\t\t\t\t} else if (bronze === true) {\n\t\t\t\t\t\t\tcontent += \"<td><span class='medal bronzeMedal'></span>Bronze</td></tr>\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontent += \"<td>\" + d.events[i].roundresult +  \"</td></tr>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn content;\n\n\t\t\t});\n\n\t\tvar athLinks = athContent.append(\"ul\")\n\t\t\t.attr(\"class\", \"links\")\n\t\t\t.html(function(d) {\n\t\t\t\tvar content = \"<p class='label'>Related content</p>\";\n\n\t\t\t\tif (d.link1text !== undefined) {\n\t\t\t\t\tcontent += \"<li><a target='_blank' href='\" + d.link1url + \"'>\" + d.link1text + \"</a></li>\";\n\t\t\t\t}\n\n\t\t\t\tif (d.link2text !== undefined) {\n\t\t\t\t\tcontent += \"<li><a target='_blank' href='\" + d.link2url + \"'>\" + d.link2text + \"</a></li>\";\n\t\t\t\t}\n\n\t\t\t\tif (d.link3text !== undefined) {\n\t\t\t\t\tcontent += \"<li><a target='_blank' href='\" + d.link3url + \"'>\" + d.link3text + \"</a></li>\";\n\t\t\t\t}\n\n\t\t\t\treturn content;\n\n\t\t\t});\n\n\t\tvar moreOverlay = athContent.append(\"div\")\n\t\t\t.attr(\"class\", \"moreOverlay\")\n\t\t\t.append(\"button\")\n\t\t\t.attr(\"class\", \"readMore\");\n\n\t\tmoreOverlay.html(\"<i class='fa fa-plus-circle'></i> Read more\");\n\n\n\t\t// ENDS D3 ATHLETE DIV SETUP AND BEGINS ASSIGNING FUNCTIONS AND RUNNING LAYOUTS\n\n\t\t// controlling the expanding/collapsing of athlete divs when\n\t\t// the readmore or +/- button is clicked\n\n\t\t$(\".readMore, .expander\").click(function() {\n\t\t\tvar athlete = $(this).closest(\".athlete\");\n\t\t\tcheckExpansion(athlete);\n\t\t});\n\n\t\t// initializes isotope\n\t\trunIsotope();\n\t}\n\n\t/////////////////////////////////////////////\n\t///// CHECKING EXPANSION OR COLLAPSE ////////\n\t/////////////////////////////////////////////\n\n\tfunction checkExpansion(elem) {\n\t\tif (elem.hasClass(\"expanded\") === false) {\n\t\t\texpand(elem, \"expand\"); //open the athlete clicked\n\t\t\t$grid.isotope(\"layout\"); //rerun the isotope layout\n\t\t}\n\t\t// if the athlete is open ...\n\t\telse {\n\t\t\texpand(elem, \"collapse\"); // collapse that athlete\n\t\t\t$grid.isotope(\"layout\"); // rerun the isotope layout\n\t\t}\n\n\t\t// assign the athlete we're clicking on to the movedAthlete variable\n\t\tvar movedAthlete = elem;\n\n\t\t// after the animation has finished running, run the checkPosition function\n\t\tsetTimeout(function() {\n\t\t\tcheckPosition(movedAthlete);\n\t\t}, 525);\n\t}\n\n\n\t/////////////////////////////////////////////\n\t///// CONTROLLING ATHLETE EXPANSION /////////\n\t/////////////////////////////////////////////\n\n\t// the expand function is passed two parameters, the object we clicked on,\n\t// and the direction (\"expand\" or \"collapse\")\n\n\tfunction expand(athlete, direction) {\n\n\t\t// let's see what we're doing: expanding or collapsing?\n\t\tif (direction === \"expand\") {\n\n\t\t\t// collapse any open athletes, display all hidden read more buttons,\n\t\t\t// and reset all minus circles to plus circles\n\t\t\t$(\".athlete\").removeClass(\"expanded\");\n\t\t\t$(\".athlete\").find(\".moreOverlay\").removeClass(\"hidden\");\n\t\t\t$(\".expander\").removeClass(\"fa-minus-circle\").addClass(\"fa-plus-circle\");\n\n\t\t\t// on the expanding athlete, swap the plus circle for the minus circle,\n\t\t\t// hide the read more button, then expand with the expanded class\n\t\t\tathlete.find(\".expander\").removeClass(\"fa-plus-circle\").addClass(\"fa-minus-circle\");\n\t\t\tathlete.find(\".moreOverlay\").addClass(\"hidden\");\n\t\t\tathlete.addClass(\"expanded\");\n\n\t\t} else if (direction === \"collapse\") {\n\n\t\t\t// swap +/- circle, display the read more button, then collapse by\n\t\t\t// removing the expanded class\n\t\t\tathlete.find(\".expander\").removeClass(\"fa-minus-circle\").addClass(\"fa-plus-circle\");\n\t\t\tathlete.find(\".moreOverlay\").removeClass(\"hidden\");\n\t\t\tathlete.removeClass(\"expanded\");\n\t\t}\n\t}\n\n\n\t/////////////////////////////////////////////\n\t///// CHECKING EXPANDED ATHLETE POSITION ////\n\t/////////////////////////////////////////////\n\n\t// the checkPosition function is passed the athlete div that has changed\n\t// position. if it falls within 100 pixels of the bottom of the window\n\t// or above the top of the window, the window scrolls to that athlete's position\n\n\tfunction checkPosition(athlete) {\n\n\t\t// grabs the height and scrolltop of the window, and the offset position\n\t\t// of the athlete that has changed layout\n\t\tvar windowHeight = $(window).height();\n\t\tvar top = $(window).scrollTop();\n\t\tvar y = athlete.offset().top;\n\n\t\t// if that athlete falls within 100 pixels of the bottom of the window\n\t\t// or above the top, the window scrolls the athlete into view\n\t\tif (y > top + (windowHeight - 100) || y < top) {\n\t\t\t$(\"html, body\").animate({\n\t\t\t\tscrollTop: y - 100\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\n\n\t/////////////////////////////////////////////\n\t///// INITIALIZING ISOTOPE //////////////////\n\t/////////////////////////////////////////////\n\n\tvar $grid;\n\n\tfunction runIsotope() {\n\n\t\t// setting up the isotope grid. for more info, see: http://isotope.metafizzy.co/\n\t\t$grid = $(\"#olympians\").isotope({\n\t\t\tlayoutMode: 'packery',\n\t\t\titemSelector: '.athlete',\n\t\t\tprecentPosition: true,\n\t\t\ttransitionDuration: 500\n\t\t});\n\n\t\t// test code to test the sorting function of isotope, will expand later\n\t\tvar sport = \"basketball\";\n\t\tsport = \".\" + \"basketball\";\n\t\t$(\"#testButton\").click(function() {\n\t\t\t$grid.isotope({\n\t\t\t\tfilter: sport\n\t\t\t});\n\t\t});\n\n\t}\n\n\n\t/////////////////////////////////////////////\n\t///// CREATING DROPDOWNS ////////////////////\n\t/////////////////////////////////////////////\n\n\tvar sports = [];\n\n\tvar sportSelection = \"athlete\";\n\tvar medalSelection = \"athlete\";\n\n\tfunction buildFilters() {\n\n\t\tfor (i = 0; i < athletes.length; i++) {\n\t\t\tif ($.inArray(athletes[i].sport, sports) === -1) {\n\t\t\t\tsports.push(athletes[i].sport);\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < sports.length; i++) {\n\t\t\tvar option = \"<option data-selection='\" + sports[i].toLowerCase() + \"'>\" + sports[i] + \"</option>\";\n\t\t\t$(\"#sports\").append(option);\n\t\t}\n\t}\n\n\t/////////////////////////////////////////////\n\t///// FILTERING AHTLETES ////////////////////\n\t/////////////////////////////////////////////\n\n\n\t$(\"#sports\").change(function() {\n\t\tsportsSelection = $(this).find(\"option:selected\").attr(\"data-selection\");\n\t\tfilterAthletes(sportsSelection, medalSelection);\n\t});\n\n\t$(\"#medals\").change(function() {\n\t\tmedalSelection = $(this).find(\"option:selected\").attr(\"data-selection\");\n\t\tfilterAthletes(sportsSelection, medalSelection);\n\t});\n\n\t// $(\"#medals\").change(function() {\n\t// \tmedalSelection = ($(this).find(\"option:selected\").attr(\"data-selection\"));\n\t// \tif (medalSelection === \"all athletes\") {\n\t// \t\tmedalSelection = \"athlete\";\n\t// \t} else if (medalSelection === \"any\")\n\t// \tfilterAthletes(sportsSelection, medalSelection);\n\t// });\n\n\n\tfunction filterAthletes(sport, medal) {\n\n\t\tfilterString = \".\"+sport+\".\"+medal;\n\t\t$grid.isotope({\n\t\t\tfilter: filterString\n\t\t});\n\n\t}\n\n});\n"],"sourceRoot":"/source/"}