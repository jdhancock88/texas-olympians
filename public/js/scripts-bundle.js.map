{"version":3,"sources":["+custom.js"],"names":["$","document","ready","setupData","athletes","sked","each","k","v","athlete","events","nextDate","this","nextdate","substring","dateParser","parse","dateFormat","name","event","next_date","next_time","nexttime","channel","roundresult","gold","silver","bronze","push","buildOlympians","console","log","athDivs","d3","select","selectAll","data","enter","append","attr","d","sport","toLowerCase","athContent","replace","athMedals","text","html","athBio","bioContent","age","hometown","bio","moreOverlay","content","i","length","undefined","link1text","link1url","link2text","link2url","link3text","link3url","click","closest","hasClass","expand","$grid","isotope","movedAthlete","setTimeout","checkPosition","runIsotope","thisObj","direction","removeClass","find","addClass","windowHeight","window","height","top","scrollTop","y","offset","animate","layoutMode","itemSelector","precentPosition","transitionDuration","filter","Date","year","getFullYear","dataCounter","time","format","getJSON"],"mappings":"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","file":"scripts-bundle.js","sourcesContent":["$(document).ready(function() {\n\n\t//custom scripting goes here\n\n\t// injecting current year into footer\n\t// DO NOT DELETE\n\n\tvar d = new Date();\n\tvar year = d.getFullYear();\n\n\t$('.copyright').text(year);\n\n\t// data counter will keep track if all of our data is loaded before we build the page\n\tvar dataCounter = 0;\n\n\t// variables that will ultimately hold our data\n\tvar sked;\n\tvar athletes;\n\n\t// date parser to parse the string into a date object\n\tvar dateParser = d3.time.format(\"%Y-%m-%d\");\n\n\t// date formater turns the date object into the correct Mon. Day, Year format\n\tvar dateFormat = d3.time.format(\"%b. %d, %Y\");\n\n\t/////////////////////////////////////////////\n\t///// GETTING THE DATA //////////////////////\n\t/////////////////////////////////////////////\n\n\t$.getJSON(\"http://interactives.dallasnews.com/data-store/2016/062016-texas-olympians-sked.json\", function(data) {\n\t\tsked = data;\n\t\tdataCounter++;\n\n\t\tif (dataCounter === 2) {\n\t\t\tsetupData(athletes, sked);\n\t\t}\n\t});\n\n\t$.getJSON(\"http://interactives.dallasnews.com/data-store/2016/062016-texas-olympians-athletes.json\", function(data) {\n\t\tathletes = data;\n\t\tdataCounter++;\n\n\t\tif (dataCounter === 2) {\n\t\t\tsetupData(athletes, sked);\n\t\t}\n\t});\n\n\t/////////////////////////////////////////////\n\t///// SETTING UP OUR DATA FOR ALL ATHLETES //\n\t/////////////////////////////////////////////\n\n\n\t// for each athlete, we'll cycle through our sked and add each event\n\t// to an events key on the athlete object\n\n\tfunction setupData(athletes, sked) {\n\n\t\t$.each(athletes, function(k,v) {\n\n\t\t\tvar athlete = v;\n\t\t\tathlete.events = [];\n\n\t\t\t$.each(sked, function() {\n\n\t\t\t\t// cut our date down to just YYYY-MM-DD\n\t\t\t\t// parse it into a date object\n\t\t\t\t// then format it into our MMM. DD, YYYY format\n\t\t\t\tvar nextDate = this.nextdate.substring(0,10);\n\t\t\t\tnextDate = dateParser.parse(nextDate);\n\t\t\t\tnextDate = dateFormat(nextDate);\n\n\t\t\t\t// add each event into our events key\n\t\t\t\tif (athlete.name === this.athlete) {\n\t\t\t\t\tvar event = {\n\t\t\t\t\t\t\"event\": this.event,\n\t\t\t\t\t\t\"next_date\": nextDate,\n\t\t\t\t\t\t\"next_time\": this.nexttime,\n\t\t\t\t\t\t\"channel\": this.channel,\n\t\t\t\t\t\t\"roundresult\": this.roundresult,\n\t\t\t\t\t\t\"gold\": this.gold,\n\t\t\t\t\t\t\"silver\": this.silver,\n\t\t\t\t\t\t\"bronze\": this.bronze,\n\t\t\t\t\t};\n\t\t\t\t\tathlete.events.push(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\n\t\t// pass the data off to our olympian drawing function\n\t\tbuildOlympians(athletes);\n\t}\n\n\n\t/////////////////////////////////////////////\n\t///// BUILDING OUT THE PAGE /////////////////\n\t/////////////////////////////////////////////\n\n\tfunction buildOlympians(athletes) {\n\n\t\tconsole.log(athletes);\n\n\t\tvar athDivs = d3.select(\"#olympians\").selectAll(\".athlete\")\n\t\t\t.data(athletes);\n\n\t\tathDivs.enter().append(\"div\")\n\t\t\t.attr(\"class\", function(d) {\n\t\t\t\tvar sport = d.sport.toLowerCase();\n\t\t\t\treturn \"athlete \" + sport;\n\t\t\t})\n\t\t\t.attr(\"data-athlete\", function(d) {\n\t\t\t\treturn d.name;\n\t\t\t});\n\n\t\tvar expander = athDivs.append(\"i\")\n\t\t\t.attr(\"class\", \"fa fa-plus-circle expander\");\n\n\t\tvar athImage = athDivs.append(\"img\")\n\t\t\t.attr(\"src\", function(d) {\n\t\t\t\tvar name = d.name.toLowerCase();\n\t\t\t\tname = name.replace(/ /g, \"\");\n\t\t\t\treturn \"/images/_\" + name +\".jpg\";\n\t\t\t})\n\t\t\t.attr(\"alt\", function(d) {return d.name;});\n\n\t\tvar athContent = athDivs.append(\"div\")\n\t\t\t.attr(\"class\", \"athContent\");\n\n\n\t\tvar athMedals = athContent.append(\"ul\")\n\t\t\t.attr(\"class\", \"medalGroup clearFix\");\n\n\t\t\tathMedals.append(\"li\")\n\t\t\t\t.attr(\"class\", \"gold\")\n\t\t\t\t.text(function(d) {return d.gold;});\n\n\t\t\tathMedals.append(\"li\")\n\t\t\t\t.attr(\"class\", \"silver\")\n\t\t\t\t.text(function(d) {return d.silver;});\n\n\t\t\tathMedals.append(\"li\")\n\t\t\t\t.attr(\"class\", \"bronze\")\n\t\t\t\t.text(function(d) {return d.bronze;});\n\n\n\t\tathContent.append(\"h4\")\n\t\t\t.html(function(d){return d.name;});\n\n\t\tvar athBio = athContent.append(\"div\")\n\t\t\t.attr(\"class\", \"bio\");\n\n\t\t\tathBio.append(\"div\")\n\t\t\t\t.attr(\"class\", \"info\")\n\t\t\t\t.html(function(d) {\n\t\t\t\t\tvar bioContent = \"<p class='label'>Age</p>\";\n\t\t\t\t\tbioContent += \"<h6>\" + d.age + \"</h6>\";\n \t\t\t\t\treturn bioContent;\n\t\t\t\t});\n\n\t\t\tathBio.append(\"div\")\n\t\t\t\t.attr(\"class\", \"info\")\n\t\t\t\t.html(function(d) {\n\t\t\t\t\tvar bioContent = \"<p class='label'>Hometown</p>\";\n\t\t\t\t\tbioContent += \"<h6>\" + d.hometown + \"</h6>\";\n \t\t\t\t\treturn bioContent;\n\t\t\t\t});\n\n\t\t\tathBio.append(\"div\")\n\t\t\t\t.attr(\"class\", \"info\")\n\t\t\t\t.html(function(d) {\n\t\t\t\t\tvar bioContent = \"<p class='label'>Sport</p>\";\n\t\t\t\t\tbioContent += \"<h6>\" + d.sport + \"</h6>\";\n \t\t\t\t\treturn bioContent;\n\t\t\t\t});\n\n\t\tathContent.append(\"p\")\n\t\t\t.attr(\"class\", \"blurb\")\n\t\t\t.html(function(d){return d.bio;});\n\n\t\tvar athTable = athContent.append(\"table\")\n\t\t\t.attr(\"class\", \"schedule\")\n\t\t\t.html(function(d) {\n\n\t\t\t\tvar content = \"\";\n\n\t\t\t\tcontent += \"<p class='label'>Schedule and Results</p>\";\n\n\t\t\t\tfor (i= -1; i < d.events.length; i++) {\n\t\t\t\t\tvar gold = false,\n\t\t\t\t\t\tsilver = false;\n\t\t\t\t\t\tbronze = false;\n\n\t\t\t\t\tif (i >= 0) {\n\n\t\t\t\t\t\tif (d.events[i].gold === \"x\") {\n\t\t\t\t\t\t\tgold = true;\n\t\t\t\t\t\t} else if (d.events[i].silver === \"x\") {\n\t\t\t\t\t\t\tsilver = true;\n\t\t\t\t\t\t} else if (d.events[i].bronze === \"x\") {\n\t\t\t\t\t\t\tbronze = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.log(gold, silver, bronze);\n\n\t\t\t\t\tif (i === -1) {\n\t\t\t\t\t\tcontent +=  \"<tr><th>Event</th><th>Time/Date</th><th>Ch.</th><th>Round/Result</th></tr>\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontent += \"<tr><td>\" + d.events[i].event + \"</td><td>\" + d.events[i].next_time +\", \" + d.events[i].next_date + \"</td><td>\" + d.events[i].channel + \"</td>\";\n\n\t\t\t\t\t\tif (gold === true) {\n\t\t\t\t\t\t\tcontent += \"<td><span class'medal goldMedal'</td></tr>\";\n\t\t\t\t\t\t} else if (silver === true) {\n\t\t\t\t\t\t\tcontent += \"<td><span class'medal silverMedal'</td></tr>\";\n\t\t\t\t\t\t} else if (bronze === true) {\n\t\t\t\t\t\t\tcontent += \"<td><span class'medal bronzeMedal'</td></tr>\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontent += \"<td>\" + d.events[i].roundresult +  \"</td></tr>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn content;\n\n\t\t\t});\n\n\t\tvar athLinks = athContent.append(\"ul\")\n\t\t\t.attr(\"class\", \"links\")\n\t\t\t.html(function(d) {\n\t\t\t\tvar content = \"\";\n\n\t\t\t\tif (d.link1text !== undefined) {\n\t\t\t\t\tcontent += \"<li><a target='_blank' href='\" + d.link1url + \"'>\" + d.link1text + \"</a></li>\";\n\t\t\t\t}\n\n\t\t\t\tif (d.link2text !== undefined) {\n\t\t\t\t\tcontent += \"<li><a target='_blank' href='\" + d.link2url + \"'>\" + d.link2text + \"</a></li>\";\n\t\t\t\t}\n\n\t\t\t\tif (d.link3text !== undefined) {\n\t\t\t\t\tcontent += \"<li><a target='_blank' href='\" + d.link3url + \"'>\" + d.link3text + \"</a></li>\";\n\t\t\t\t}\n\n\t\t\t\treturn content;\n\n\t\t\t});\n\n\t\tvar moreOverlay = athContent.append(\"div\")\n\t\t\t.attr(\"class\", \"moreOverlay\")\n\t\t\t.append(\"button\")\n\t\t\t.attr(\"class\", \"readMore\");\n\n\t\tmoreOverlay.html(\"<i class='fa fa-plus-circle'></i> Read more\");\n\n\n\t\t// ENDS D3 ATHLETE DIV SETUP AND BEGINS ASSIGNING FUNCTIONS AND RUNNING LAYOUTS\n\n\t\t// controlling the expanding/collapsing of athlete divs when\n\t\t// the readmore or +/- button is clicked\n\n\t\t$(\".readMore, .expander\").click(function() {\n\t\t\t// if the athlete clicked isn't already open ...\n\t\t\tif ($(this).closest(\".athlete\").hasClass(\"expanded\") === false) {\n\t\t\t\texpand($(this), \"expand\"); //open the athlete clicked\n\t\t\t\t$grid.isotope(\"layout\"); //rerun the isotope layout\n\t\t\t}\n\t\t\t// if the athlete is open ...\n\t\t\telse {\n\t\t\t\texpand($(this), \"collapse\"); // collapse that athlete\n\t\t\t\t$grid.isotope(\"layout\"); // rerun the isotope layout\n\t\t\t}\n\n\t\t\t// assign the athlete we're clicking on to the movedAthlete variable\n\t\t\tvar movedAthlete = $(this).closest(\".athlete\");\n\n\t\t\t// after the animation has finished running, run the checkPosition function\n\t\t\tsetTimeout(function() {\n\t\t\t\tcheckPosition(movedAthlete);\n\t\t\t}, 525);\n\n\t\t});\n\n\t\t// initializes isotope\n\t\trunIsotope();\n\t}\n\n\n\n\t/////////////////////////////////////////////\n\t///// CONTROLLING ATHLETE EXPANSION /////////\n\t/////////////////////////////////////////////\n\n\t// the expand function is passed two parameters, the object we clicked on,\n\t// and the direction (\"expand\" or \"collapse\")\n\n\tfunction expand(thisObj, direction) {\n\n\t\t// assigning the athlete variable to the athlete div\n\t\tvar athlete = thisObj.closest(\".athlete\");\n\n\t\t// let's see what we're doing: expanding or collapsing?\n\t\tif (direction === \"expand\") {\n\n\t\t\t// collapse any open athletes, display all hidden read more buttons,\n\t\t\t// and reset all minus circles to plus circles\n\t\t\t$(\".athlete\").removeClass(\"expanded\");\n\t\t\t$(\".athlete\").find(\".moreOverlay\").removeClass(\"hidden\");\n\t\t\t$(\".expander\").removeClass(\"fa-minus-circle\").addClass(\"fa-plus-circle\");\n\n\t\t\t// on the expanding athlete, swap the plus circle for the minus circle,\n\t\t\t// hide the read more button, then expand with the expanded class\n\t\t\tathlete.find(\".expander\").removeClass(\"fa-plus-circle\").addClass(\"fa-minus-circle\");\n\t\t\tathlete.find(\".moreOverlay\").addClass(\"hidden\");\n\t\t\tathlete.addClass(\"expanded\");\n\n\t\t} else if (direction === \"collapse\") {\n\n\t\t\t// swap +/- circle, display the read more button, then collapse by\n\t\t\t// removing the expanded class\n\t\t\tathlete.find(\".expander\").removeClass(\"fa-minus-circle\").addClass(\"fa-plus-circle\");\n\t\t\tathlete.find(\".moreOverlay\").removeClass(\"hidden\");\n\t\t\tathlete.removeClass(\"expanded\");\n\t\t}\n\t}\n\n\n\t/////////////////////////////////////////////\n\t///// CHECKING EXPANDED ATHLETE POSITION ////\n\t/////////////////////////////////////////////\n\n\t// the checkPosition function is passed the athlete div that has changed\n\t// position. if it falls within 100 pixels of the bottom of the window\n\t// or above the top of the window, the window scrolls to that athlete's position\n\n\tfunction checkPosition(athlete) {\n\n\t\t// grabs the height and scrolltop of the window, and the offset position\n\t\t// of the athlete that has changed layout\n\t\tvar windowHeight = $(window).height();\n\t\tvar top = $(window).scrollTop();\n\t\tvar y = athlete.offset().top;\n\n\t\t// if that athlete falls within 100 pixels of the bottom of the window\n\t\t// or above the top, the window scrolls the athlete into view\n\t\tif (y > top + (windowHeight - 100) || y < top) {\n\t\t\t$(\"html, body\").animate({\n\t\t\t\tscrollTop: y - 100\n\t\t\t}, 500);\n\t\t}\n\t}\n\n\n\n\t/////////////////////////////////////////////\n\t///// INITIALIZING ISOTOPE //////////////////\n\t/////////////////////////////////////////////\n\n\tvar $grid;\n\n\tfunction runIsotope() {\n\n\t\t// setting up the isotope grid. for more info, see: http://isotope.metafizzy.co/\n\t\t$grid = $(\"#olympians\").isotope({\n\t\t\tlayoutMode: 'packery',\n\t\t\titemSelector: '.athlete',\n\t\t\tprecentPosition: true,\n\t\t\ttransitionDuration: 500\n\t\t});\n\n\t\t// test code to test the sorting function of isotope, will expand later\n\t\tvar sport = \"basketball\";\n\t\tsport = \".\" + \"basketball\";\n\t\t$(\"#testButton\").click(function() {\n\t\t\tconsole.log(\"test\");\n\t\t\t$grid.isotope({\n\t\t\t\tfilter: sport\n\t\t\t});\n\t\t});\n\n\t}\n\n\n\n});\n"],"sourceRoot":"/source/"}